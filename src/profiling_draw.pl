#!/usr/bin/perl
#-------------------------------------------------+
#    [APM] This script was generated by amp.pl    |
#    [APM] Created time: 2015-11-07 15:55:21      |
#-------------------------------------------------+
# name: profiling_draw.pl
# func: draw the profiling data with hist or heatmap
# version: 0.1

use strict;
use warnings;

use Getopt::Std;
use File::Basename qw/basename/;
use List::Util qw/sum/;
use FindBin qw/$Bin/;

use lib "$Bin/../lib";
use CONF qw/load_conf fetch_path/;

my %opts = (n=>10,p=>1);
getopts('n:bhcr:p:',\%opts);

die qq(
Usage:   perl $0 <profiling.file> <taxonomy level>

Options: -n INT    fetch the top 'N' taxonomy by the relative abundance in all samples
         -p FLOAT  fetch the taxonomy whose relative abundance greater than this in at least one sample, default is 1 (1%).
         -b        draw the fill stack bar figure 
         -h        draw the heatmap figure
         -c        do cluster analysis with 'bray' and paste the stack figure along with the tree leaves.
         -r STR    set Rscript path 

Notes: <taxonomy level>, "Domain","Phylum","Class","Order","Family","Genus","Species"
) unless @ARGV == 2;

my $file = shift @ARGV;
my $level = shift @ARGV;
my $fname = basename($file);

my $conf = load_conf("$Bin/../etc/software.conf");
my $Rscript = $opts{r} || fetch_path($conf,"Rscript");

# read the profiling file 
open IN,$file or die $!;
my $header = <IN>;
chomp $header;
my @samples = split /\t/,$header;
splice(@samples,0,1);

my %hash;
my @others = ();
my @unassigned;
while(<IN>)
{
	chomp;
	my @arr = split /\t/;
	# shift @arr;
	my $class = shift @arr;
	
	if ($class eq "Other")
	{
		@others = @arr;
	}
	elsif ($class eq "Unclassified")
	{
		@unassigned = @arr;
	}
	else 
	{
		my $sum = sum(@arr);
		push @arr , $sum;
		$hash{$class} = \@arr;
	}
}
close IN;

# draw bar plot 
if ($opts{b})
{
	open OUT,">$level.bar.data.xls" or die $!;
	print OUT "class\tvalue\tsample\n";
	
	my $i = 0;
	
	foreach my$class (sort {$hash{$b}->[-1] <=> $hash{$a}->[-1]} keys %hash)
	{
		$i ++;
		my @arr = @{$hash{$class}};
		my $frt = pop @arr;
		if ( $i <= $opts{n} && isMain(@arr) )
		{
			map { print OUT "$class\t$arr[$_]\t$samples[$_]\n" } 0 .. $#arr;
		}
		else 
		{
			map { $others[$_] += $arr[$_] } 0 .. $#samples;
		}
	}

	map { print OUT "Others\t$others[$_]\t$samples[$_]\n" } 0 .. $#samples if (@others);
	map { print OUT "Unclassified\t$unassigned[$_]\t$samples[$_]\n" } 0 .. $#samples;
	close OUT;
	
	# draw figure with ggplot2 in R
	my $plot_name = "$level.bar";
	my $R = <<R;
library(ggplot2)
data = read.table("$level.bar.data.xls",header=T,sep="\t",check.names=F)

# calc the save fig size.
sample_num = length( unique(data\$sample) )
width  = 8
height = 6
if (sample_num <= 10) {
	width = 6
} else if (sample_num <= 30) {
	width = 8
} else if (sample_num >= 100) {.
	width = 16
} else {
	width = 8 + 8*(sample_num-30)/70
}

sorder = factor(data\$sample,levels=unique(data\$sample),order=TRUE)
porder = factor(data\$class,levels=unique(data\$class),order=TRUE)

ggplot(data=data,aes(x=sorder,y=value,fill=porder)) + 
geom_bar(stat="identity",position="stack") + 
labs(x="Sample Names",y="Relative Abundance",fill="$level",title="Taxonomy Stack Distribution of $level") + 
theme(axis.text.x=element_text(angle=45,vjust=1,hjust=1))
ggsave("$plot_name.png",height=height,width=width)
ggsave("$plot_name.pdf",height=height,width=width)
R
	open OUT,">bar.R" or die $!;
	print OUT $R;
	close OUT;
	system("$Rscript bar.R");
	system("rm Rplots.pdf") if ( -e "Rplots.pdf");
}

# draw heatmap figure
if ($opts{h})
{
	open OUT,">$level.heatmap.data.xls" or die $!;
	print OUT "class\t" . ${[ join "\t",@samples ]}[0] . "\n";
	
	my $i = 0;
	
	foreach my$class (sort {$hash{$b}->[-1] <=> $hash{$a}->[-1]} keys %hash)
	{
		$i ++;
		my @arr = @{$hash{$class}};
		my $frt = pop @arr;
		if ( $i <= $opts{n} && isMain(@arr) )
		{
			my $vals = join "\t" , @arr;
			print OUT "$class\t$vals\n";
		}
		else 
		{
			map { $others[$_] += $arr[$_] } 0 .. $#samples;
		}
	}
	close OUT;
	
	if (0 == $i)
	{
		warn("WARNING: There are no taxonomy annotation in file, [$file].\nThe program will be die!"); 
		exit 1;
	}

	my $cluster_row = $i >= 3 ? "TRUE" : "FALSE";
	my $cluster_col = @samples >= 3 ? "TRUE" : "FALSE";
	my $scale = @samples >= 2 ? "row" : "none";

	# draw heatmap figure with pheatmap in R
	my $plot_name = "$level.heatmap";
	my $R = <<R;
library(pheatmap)
data = read.table("$level.heatmap.data.xls",header=T,sep="\t",row.names=1,check.names=F)
pheatmap(data,scale="$scale",cluster_rows=$cluster_row,cluster_cols=$cluster_col,cellwidth=20,cellheight=20,filename="$plot_name.png")
pheatmap(data,scale="$scale",cluster_rows=$cluster_row,cluster_cols=$cluster_col,cellwidth=20,cellheight=20,filename="$plot_name.pdf")
R
	open OUT,">heatmap.R" or die $!;
	print OUT $R;
	close OUT;
	system("$Rscript heatmap.R");
	system("rm Rplots.pdf") if ( -e "Rplots.pdf");
}

if ($opts{c})
{
	# prepare the input file:
	my $bar_file = "$level.cbar.data.xls";
	
	open OUT,">$bar_file" or die $!;
	print OUT "class\t" . ${[ join "\t",@samples ]}[0] . "\n";
	
	my $i = 0;
	foreach my$class (sort {$hash{$b}->[-1] <=> $hash{$a}->[-1]} keys %hash)
	{
		$i ++;
		my @arr = @{$hash{$class}};
		my $frt = pop @arr;
		if ( $i <= $opts{n} && isMain(@arr) )
		{
			my $vals = join "\t" , @arr;
			print OUT "$class\t$vals\n";
		}
		else 
		{
			map { $others[$_] += $arr[$_] } 0 .. $#samples;
		}
	}
	
	print OUT "Others\t" , ${[ join "\t",@others ]}[0] , "\n" if (@others);
	print OUT "Unclassified\t" , ${[ join "\t",@unassigned ]}[0] , "\n";
	close OUT;

	my $cluster_file = "$level.cluster.data.xls";
	system("ln -sf $file $cluster_file");

	system("$Rscript $Bin/bray_stackmap_function.R $cluster_file $bar_file $level 20");
}

sub isMain
{
	my @arr = @_;

	my $flag = 0;
	for (@arr)
	{
		if ($_ > $opts{p})
		{
			$flag = 1;
			last;
		}
	}

	return $flag;
}
