#!/usr/bin/perl
#-------------------------------------------------+
#    [APM] This script was generated by amp.pl    |
#    [APM] Created time: 2016-05-23 13:55:12      |
#-------------------------------------------------+
# name: freq_stat.pl
# func: 
# version:: 0.1

use strict;
use warnings;

use File::Basename qw/basename/;
use Getopt::Long;

our ($rowname,$colname,$group,$boxplot,$barplot);
GetOptions(
"rowname|r:s" => \$rowname,
"colname|c:s" => \$colname,
"group|g:s"   => \$group,
"boxplot"     => \$boxplot,
"barplot"     => \$barplot
);

# set the default value
$rowname ||= "Length";
$colname ||= "Samples";

my $Rscript = "/Bio/bin/Rscript";

die unless @ARGV == 1;

# the input matrix file 
my $file = shift @ARGV;
my $fname = basename($file);

# turn matrix data to ggpplot2 readable format
mtx2ggplot2($file,-rowname=>$rowname,-colname=>$colname,-group=>$group,-valname=>"frequency");

# draw figurs with ggplot2
my $color = $group ? "group" : "$colname";
my $Rcmd = <<CMD;
library(ggplot2)

# read the data 
data = read.table("$fname.forGGPLOT2",header=T,sep="\\t",check.names=F);

ggplot(data,aes($rowname,frequency)) + 
geom_bar(stat="identity",position="dodge",aes(group=$colname,fill=$color)) + 
labs(x="Length (bp)",y="Frequency (Number of Tags)") + 
theme(legend.position="top")
ggsave("$fname.histogram.png");

CMD

open R , ">draw.R" or die $!;
print R $Rcmd;
close R;
system("$Rscript draw.R");

#===  FUNCTION  ================================================================
#         NAME: mtx2ggplot2
#      PURPOSE: turn matrix data to ggpplot2 readable format
#   PARAMETERS: -header
#               -group
#      RETURNS: a file named "$file.forGGPLOT2" which contains at least 3/4 cols.
#  DESCRIPTION: the return file contains 3 or 4 columns,
#               <rowname>	<colname>	<values>	[group]
#       THROWS: no exceptions
#     COMMENTS: none
#     SEE ALSO: n/a
#===============================================================================
sub mtx2ggplot2
{
	my ($file,%opts) = @_;
	
	# read the group info if defined
	my %groups;
	if ($opts{'-group'})
	{
		open IN,$opts{'-group'} or die $!;
		while(<IN>)
		{
			chomp;
			my ($name,$group) = split /\t/;
			$groups{$name} = $group;
		}
		close IN;
	}

	my $fname = basename($file);
	open IN,$file or die $!;
	open OUT,">$fname.forGGPLOT2" or die $!;
	
	# set the first line 
	my $rowname = $opts{'-rowname'} || "V1";
	my $colname = $opts{'-colname'} || "V2";
	my $valname = $opts{'-valname'} || "values";
	my $groupname = $opts{'groupname'} || "group";
	
	my $frt_line = $opts{'-group'} ? "$rowname\t$colname\t$valname\t$groupname\n" : "$rowname\t$colname\t$valname\n";
	print OUT "$frt_line";

	my $head = <IN>;
	chomp $head;
	my @colnames = split /\t/,$head;
	shift @colnames;

	while(<IN>)
	{
		next if (/^#/);
		chomp;
		my ($name,@vals) = split /\t/;
		
		foreach my $i (0 .. $#vals)
		{
			if ($opts{'-group'})
			{
				my $group = $groups{$colnames[$i]} or die "FATA ERROR: [$colnames[$i]] is not defined in the group file";
				print OUT "$name\t$colnames[$i]\t$vals[$i]\t$group\n";
			}
			else 
			{
				print OUT "$name\t$colnames[$i]\t$vals[$i]\n";
			}
		}
	}
	
	close IN;
}
