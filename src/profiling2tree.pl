#!/usr/bin/perl
#-------------------------------------------------+
#    [APM] This script was generated by amp.pl    |
#    [APM] Created time: 2015-12-18 14:28:06      |
#-------------------------------------------------+
# name: profiling2tree.pl
# func: turn all profiling file to profiling file with taxonomy tree 
# version:: 0.1

use strict;
use warnings;

use General qw/timeLOG/;

die "Usage: perl $0 all.scaftigs.profiling.xls\n" unless @ARGV == 1;

my $file = shift @ARGV;

timeLOG("start ... ");

# read the all scaftigs profiling file 
open IN,$file or die $!;

# parse the header info
my $header = <IN>;
chomp $header;
my @temp = split /\t/,$header;
my $len = scalar @temp;
my @taxon_names = map { $temp[ $_ - 8 ] } 1 .. 7;
my $samples_num = $len - 1 - 7; # double samples number
my $true_samples_num = $samples_num/3;
my @sample_names = map { $temp[$_] } 1 .. $samples_num;

my $root = "0_Mirobe";
my %next = ();
my %parent = ();
my %abundance = ();

A:while(<IN>)
{
	my @temp = split /\t/;
	
	my @abundance = @temp[1 .. $samples_num];
	my @taxons = map { $temp[ $_ - 8 ] } 1 .. 7;
	
	# add the level to taxon names 
	chomp $taxons[-1];
	my @taxons_unique = map { $_ . "_" . $taxons[$_-1] } 1 .. 7;
	
	# calc the root abundance 
	map { $abundance{$root}->[$_] += $abundance[$_] } 0 .. $samples_num-1;
	
	if ($taxons[0] eq "")
	{
		$next{$root}{"1_Unassigned"} = 1;
		$parent{"1_Unassigned"} = $root;
		map { $abundance{"1_Unassigned"}->[$_] += $abundance[$_] } 0 .. $samples_num-1;
		next A;
	}
	else 
	{
		$next{$root}{$taxons_unique[0]} = 1;
		$parent{$taxons_unique[0]} = $root;
		map { $abundance{$taxons_unique[0]}->[$_] += $abundance[$_] } 0 .. $samples_num-1;
	}

	B:foreach my$i( 1 .. 6 )
	{
		my $j = $i + 1;
		if ($taxons[$i] ne "")
		{
			$next{$taxons_unique[$i-1]}{$taxons_unique[$i]} = 1;
			$parent{$taxons_unique[$i]} = $taxons_unique[$i-1];
			map { $abundance{$taxons_unique[$i]}->[$_] += $abundance[$_] } 0 .. $samples_num-1;
		}
		else 
		{
			my $other_name = "$j\_Others_of_$taxons[$i-1]";
			$next{$taxons_unique[$i-1]}{$other_name} = 1;
			$parent{$other_name} = $taxons_unique[$i-1];
			map { $abundance{$other_name}->[$_] += $abundance[$_] } 0 .. $samples_num-1;
			last B;
		}
	}
}

close IN;
timeLOG("read the profiling file done");

# create the table tree file 
# create the other tree file for SBV taxtree
open OUT,">profiling.all.taxonomy.xls";
open OUT2,">profiling.all.taxonomy.v2.xls";
print OUT "ROOT\t" , ${[ join "\t",@taxon_names ]}[0] , "\t" , ${[ join "\t",@sample_names ]}[0] , "\n";
print OUT2 "Taxonmy\t" , ${[ join "\t",@sample_names ]}[0] , "\n";
&print_tree($root);
close OUT;
close OUT2;

timeLOG("create tree file done");

sub print_tree
{
	my $root = shift;
	
	# print the values 
	my ($level,$name) = split /\_/,$root,2;
	my $true_num = $samples_num/3;
	my @values = map { 
		if ($_ >= $true_num && $_ <= $true_num*2 -1)
		{
			sprintf("%.2f",$abundance{$root}->[$_])
		}
		elsif ($_ >= $true_num*2) 
		{
			sprintf("%.6f",$abundance{$root}->[$_])
		}
		else 
		{
			sprintf("%d",$abundance{$root}->[$_])
		}
	} 0 .. $samples_num-1;

	my @temp = map { 
		if ($level == $_)
		{
			$name;
		}
		elsif ($level > $_)
		{
			"..";
		}
		else 
		{
			"--";
		}
	} 0 .. 7;
	
	
	my $taxonmy = fetch_taxon_fullname($root);
	print OUT ${[ join "\t",@temp ]}[0], "\t" , ${[ join "\t",@values ]}[0] , "\n";
	print OUT2 "$taxonmy\t" , ${[ join "\t",@values ]}[0] , "\n";

	if ($next{$root})
	{
		my @sons = sort keys %{$next{$root}};
		map { &print_tree($_) } @sons;
	}
}

sub fetch_taxon_fullname
{
	my $node = shift;
	my ($level,$name) = split /\_/,$node,2;
	
	my $taxon = $node;
	my $temp = $node;
	for (1 .. $level)
	{
		$temp = $parent{$temp};
		$taxon = "$temp;$taxon";
	}
	
	return $taxon;
}
